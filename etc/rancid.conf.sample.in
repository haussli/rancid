# @PACKAGE@ @VERSION@
# This file sets up the environment used for rancid.  see rancid.conf(5)
#
# This will be site specific
#
TERM=network;export TERM
#
# Collating locale
LC_COLLATE="POSIX"; export LC_COLLATE
#
# Create files w/o world read/write/exec permissions, but read/exec permissions
# for group.
umask 027
#
# Set the perl module search path.  perl -V shows the default
PERL5LIB="@pkglibdir@"; export PERL5LIB
#
# Under BASEDIR (i.e.: --localstatedir), there will be a "logs" directory for
# the logs from rancid and a directory for each group of routers defined in
# LIST_OF_GROUPS (below).  In addition to these, there will be a "CVS"
# directory which is the cvs (or Subversion) repository.
#
# Use a full path (no sym-links) for BASEDIR.
#
TMPDIR=/tmp; export TMPDIR
# Be careful changing this, it affects CVSROOT below.  It should be a FQPN, not
# relative.
BASEDIR=@localstatedir@; export BASEDIR
PATH=@bindir@:@ENV_PATH@; export PATH
#
# Check that the effective UID is not root, which could lead to permissions
# problems for user who is supposed to be running rancid.  If you know what
# you are doing, disable this check by commenting these lines.
uid=`perl -e 'print "$>"'`
if [ -e /proc/1/cgroup ] ; then
    DOCKER=`cat /proc/1/cgroup | grep "cpu.*\/docker"`
fi
test "x$DOCKER" = "x" && test "$uid" -eq 0 && echo "Do not run $0 as root!" && exit 1
#
# Set to the name of the sendmail executable (or script) that will accept the
# -t option to take its rcpt and other headers from stdin and $MAILOPTS (see
# below).
SENDMAIL="@SENDMAIL@"
#
# Location of the CVS/SVN/GIT repository(ies).  Be careful changing this.
# If RCSSYS is svn or git, this can be:
# - an (absolute) path (a subdirectory of BASEDIR by default).  BASEDIR/CVS,
#   BASEDIR/.svn, or BASEDIR/.scm; the name does not matter, but do not use
#   BASEDIR/.git, as it will confuse git.
# - for git, there will be a repository under CVSROOT for each rancid group.
# - any URL that git or subversion understand, but beware that:
#   - no attempt will be made to create the repository when running rancid-cvs.
#   - authentication credentials, if necessary, MUST be cached (see the SVN
#     book, Ch. 3, Network Model, Caching credentials) before non-interactive
#     commands can run, e.g. by running rancid-cvs after installation.
#   - for git, it is likely easiest to leave CVSROOT as a local path, use
#     rancid-cvs to create the repository for groups, then move those
#     repositories to the remote and update the group's .git/config.
CVSROOT=$BASEDIR/CVS; export CVSROOT
# Location of log files produced by rancid-run(1).
LOGDIR=$BASEDIR/logs; export LOGDIR
#
# Select which RCS system to use, "cvs" (default), "svn" or "git".  Do not
# change this after CVSROOT has been created with rancid-cvs.  Changing between
# these requires manual conversions.
RCSSYS=@RCSSYS@; export RCSSYS
#
# If ACLFILTERREGEX is non-empty, it is a semi-colon-separated (';') list of
# regexes.  The contents of ACLs whose name matches a regex in this list will
# be filtered.  The purpose of this feature is to filter auto-generated lists,
# thereby reducing the churn within rancid.  This option implies
# ACLFILTERSEQ=YES.
# Not all device types nor ACL types are supported by this feature.
#ACLFILTERREGEX='^Auto_;_bgp$'; export ACLFILTERREGEX
#
# if ACLFILTERSEQ is NO, prefix-list/access-list sequence numbers will NOT be
# filtered.  this option implies ACLSORT=NO for lists with sequence numbers.
#ACLFILTERSEQ=YES; export FILTERSEQ
#
# if ACLSORT is NO, access-lists will NOT be sorted.
#ACLSORT=YES; export ACLSORT
#
# FILTER_PWDS determines which passwords are filtered from configs by the
# value set (NO | YES | ALL).  see rancid.conf(5).
#FILTER_PWDS=YES; export FILTER_PWDS
#
# if NOCOMMSTR is set to YES, snmp community strings will be stripped from the
# configs.
#NOCOMMSTR=YES; export NOCOMMSTR
#
# FILTER_OSC determines if oscillating data such as keys, passwords, etc are
# filtered from configs by the value set (NO | YES | ALL).  FILTER_PWDS may
# override this.  see rancid.conf(5).
#FILTER_OSC=YES; export FILTER_OSC
#
# How many times failed collections are retried (for each run) before
# giving up.  Minimum: 0
#MAX_ROUNDS=4; export MAX_ROUNDS
#
# How many hours should pass before complaining about routers that
# can not be reached.  The value should be greater than the number
# of hours between your rancid-run cron job.  Default: 24
#OLDTIME=4; export OLDTIME
#
# How many hours should pass before complaining that a group's collection
# (the age of it's lock file) is hung.
#LOCKTIME=4; export LOCKTIME
#
# The number of devices to collect simultaneously.
#PAR_COUNT=5; export PAR_COUNT
#
# list of rancid groups
#LIST_OF_GROUPS="sl joebobisp"; export LIST_OF_GROUPS
# more groups...
#LIST_OF_GROUPS="$LIST_OF_GROUPS noc billybobisp"; export LIST_OF_GROUPS
#
# Define an alternate filter for the output of the RCS diff.  The filter
# should read from stdin and write to stdout.  The default is defined in
# control_rancid and just improves readability.
#DIFFSCRIPT="filter1 | filter2"; export DIFFSCRIPT
#
# For each group, define a list of people to receive the diffs.
# in sendmail's /etc/aliases.
#   rancid-group:	joe,moe@foo
#   rancid-admin-group:	hostmaster
# be sure to read ../README regarding aliases.
#
# If your MTA configuration is broken or you want mail to be forwarded to a
# domain not the same as the local one, define that domain here.  "@" must be
# included, as this is simply appended to the usual recipients.  It is NOT
# appended to recipients specified in rancid-run's -m option.
#MAILDOMAIN="@example.com"; export MAILDOMAIN
#
# By default, rancid mail is marked with precedence "bulk" and etc, as in the
# example.  This may be changed by setting the MAILHEADERS variable; for
# example no header by setting it to "" or adding X- style headers.  Individual
# headers must be separated by a \n.
#MAILHEADERS="Precedence: bulk\nAuto-submitted: auto-generated\nX-Auto-Response-Suppress: All"; export MAILHEADERS
#
# Additional options for sendmail(8).
#MAILOPTS="-f bounces.go.here@example.com"; export MAILOPTS
#
# Split diffs larger then N kbytes
#MAILSPLIT=0; export MAILSPLIT
