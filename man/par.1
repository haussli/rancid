.\"
.hys 50
.TH "par" "1" "29 July 2019"
.SH NAME
par \- parallel command processing
.SH SYNOPSIS
.B par
[\fB\-FHdefiqx\fP]
[\c
.BI \-c\ 
command]
[\c
.BI \-l\ 
logfile]
[\c
.BI \-n\c
 #]
[\c
.BI \-p\c
 #]
[file [file...]]
.SH DESCRIPTION
.B par
takes a list of files to run a command on.  The first line of each file begins
with a colon (:) or a pound-sign (#).  If a colon, the remainder of the
line is a command to run for each of the subsequent lines.  If a pound-sign,
then each subsequent line is a (self-contained) command, unless the
.B \-c
option was specified, in which case the lines become the arguments replacing
the braces ({}s) in the
.B \-c
argument.
.PP
The input file may also be specified on stdin, in the format as previously
described.
.PP
In each of the cases where the lines of the file, following the first, are
not commands (ie: colon or -c), instances of open-close braces ({}) in the
command will be replaced by these values.
.PP
For example, an inputfile whose contents is:
.sp
	: echo {}
.br
	a
.br
	b
.br
	c
.sp
run with
.B par
like so:
.sp
	%par -q inputfile
.sp
will produce the following output (order will vary):
.sp
	b
.br
	a
.br
	c
.PP
The command-line options are as follows:
.PP
.TP
.B \-F
Omit the footer that normally follows the output of each job.
.\"
.TP
.B \-H
Omit the header that normally precedes the output of each job.
.\"
.TP
.B \-c
Command to be run on each of the arguments following the command-line
options, where the first line of the input file(s) begins with a pound-sign
(#).
.\"
.TP
.B \-d
Print debugging information on standard error (stderr).  Repeat the option
up to three times for more verbosity.
.\"
.TP
.B \-e
Split args by spaces, rather than using sh -c.
Note:
.B \-e
is incompatible with the
.B \-i
option.
.\"
.TP
.B \-f
No input file or STDIN, just run a quantity of the command specified with -c.
.\"
.TP
.B \-i
Run commands interactively through (multiple) 
.BR xterm (1)
processes.
.\"
.TP
.B \-l
Prefix of logfile name, as in prefix.N where N is the
.B par
process number ([0..]).
.sp
Default: par.log.<time>.[0..]
.\"
.TP
.B \-n N
Number of simultaneous processes.
.sp
Default: 3
.\"
.TP
.B \-p N
Pause N seconds between running commands.
.\"
.TP
.B \-q
Quiet mode.  Omit the typical processing logs and do not create the log files
from -l, instead the children inherit stdout and stderr from
.B par.
.B \-q
is mutually exclusive with the
.B \-x
and
.B \-l
options and the option appearing last will take precedence.
.\"
.TP
.B \-x
View par logs in real-time via an 
.BR xterm (1).
.SH FILES
.br
.nf
.\" set tabstop to longest possible filename, plus a wee bit
.ta \w'par.log.1006028679.00  'u
\fIpar.log.T.N\fR Log file; where T is the current time in seconds since the
epoch and N is the par process number ([0..]).
.\"
.SH "HISTORY"
.B par
was ported from the perl version.
It differs in the following manner:
.sp
.TP
A)
If
.B par
receives a HUP/INT/TERM/QUIT signal, it does not print the commands that
will not be run.
.sp
.TP
B)
If
.B par
received a HUP/INT/TERM/QUIT signal, it does not exit immediately after
sending kill to running jobs.  it waits for them to exit so that they are
cleaned-up properly.
If a second signal is received, it dies immediately.

